Сессия сама знает, работает она локально или не локально. Потом это будет выделено в отдельный модуль около сессии.

Версия 1, без сервера:

- Мержим текущий дев в main. Пересобираем по новым рельсам playPage, переименовывая его в Test/Debug.
- Переносим gameClient из components в apps?
- Добавляем в тип SLink указатель на проект (вводим внешние ссылки на другие проекты)
- Заводим шаблон коллекции. В нем указываем ссылку на коллекцию, а так же в какой кардтайп превращаются и в какой плейс кладутся карточки.
- Хардкодим контент
- Заводим техническую структуру NFT { collection, name, image }, сводим к ней список нфт юзера
- На старте игры, имея контент, фильтруем все нфт юзера, пропуская только те, которые определены в collections. Те, которые прошли, кладем в session.nfts
- Когда вызываем start у сессии, для каждой из нфт создаем карту кардтайпа из сеттингов и кладем в соответствующий плейс.
- На кардтайпах заводим структуру NFT c двумя булами (override title, override image). Она компилится только в веб. Ее задача - помочь сформировать конфиг оверрайдов
- Формируем конфиг оверрайдов. Он состоит из двух частей - данные всех карточек и оверрайдовые поля темплейтов.
- Когда юнити загрузилось отправляем сначала контент, потом оверрайды, потом стейт. 

Версия 2, с сервером:


Добавляем на юзера в админке структуру SLink nft, SString name, SImage image. Оно в плеймоде будет работать как набор фейковых нфт




Все нфт, которы


{
	cardTypes: [
		{
			id: 123,
			fields: [
				'image',
				'name'
			]
		}
	],
	entit
}